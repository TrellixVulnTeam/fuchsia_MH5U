# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")

group("tests") {
  testonly = true

  deps = [
    ":pointerinjector-config-test",
    "//src/cobalt/bin/testing/mock_cobalt",
    "//src/ui/bin/hardware_display_controller_provider:fake-hardware-display-controller-provider",

    # The deps below are necessary on minimal product configs.
    "//src/graphics/bin/vulkan_loader",
  ]
}

executable("pointerinjector_config_test") {
  testonly = true
  sources = [ "pointerinjector_config_test.cc" ]
  deps = [
    "//sdk/fidl/fuchsia.accessibility",
    "//sdk/fidl/fuchsia.ui.accessibility.view",
    "//sdk/fidl/fuchsia.ui.pointerinjector.configuration",
    "//sdk/fidl/fuchsia.ui.policy",
    "//sdk/fidl/fuchsia.ui.views",
    "//sdk/lib/sys/cpp/testing:integration_fixture",
    "//sdk/lib/ui/scenic/cpp",
    "//src/lib/fxl",
    "//src/lib/fxl/test:gtest_main",
    "//src/lib/testing/loop_fixture",
    "//src/ui/a11y/lib/magnifier/tests/mocks:mock_magnifier",
    "//third_party/googletest:gtest",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/zx",
  ]
}

fuchsia_unittest_package("pointerinjector-config-test") {
  package_deps_for_infra_only = [
    "//src/cobalt/bin/testing/mock_cobalt:mock_cobalt",
    "//src/ui/bin/hardware_display_controller_provider:fake-hardware-display-controller-provider",
  ]
  manifest = "meta/pointerinjector_config_test.cmx"
  deps = [
    ":pointerinjector_config_test",
    "//src/ui/bin/root_presenter:component_v1_for_test",
    "//src/ui/scenic:component",
  ]

  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
    environments = [
      {
        dimensions = {
          # Ensure the device has Vulkan.
          device_type = "AEMU"
        }
      },
    ]
  }
}
