// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// The manifest seen below represents a subset of the Workstation UI realm
// as needed for input tests.  It starts the relevant components, and establishes
// known necessary static routes.
//
// There are also known missing capabilities, which we may be able to backfill.
// The missing capabilities are reported as missing, and clutter the tests, but
// it depends on the individual component whether a missing FIDL API is a fatal
// error or not.
//
// Feel free to add the components that you need but aren't here yet.
{
    include: [ "//src/ui/tests/integration_input_tests/meta/scenic-test-realm.cml" ],
    children: [
        {
            name: "text_manager",
            url: "#meta/wrapped-text-manager.cm",

            // Known missing capabilities
            //
            // fuchsia.settings.Keyboard: this is provided by SetUI, perhaps
            // we should add it in.
        },
        {
            name: "scene_manager",
            url: "#meta/scene_manager.cm",

            // Known missing capabilities:
            //
            // fuchsia.settings.Keyboard: should be non-essential so long as
            // the tests don't require changing keyboard settings.
            //
            // dev-input-report: this should be turned off, but no such
            // test component exists yet.
            //
            // fuchsia.ui.shortcut.Manager: a warning is printed in the logs,
            // but so long as we don't attempt to test shortcuts, the scene
            // manager will otherwise work.
        },
        {
            name: "input_synthesis",
            url: "#meta/input-synthesis-component.cm",
        },
    ],
    offer: [
        {
            protocol: "fuchsia.logger.LogSink",
            from: "parent",
            to: [
                "#input_synthesis",
                "#scene_manager",
                "#text_manager",
            ],
        },
        {
            protocol: [
                "fuchsia.ui.composition.Allocator",
                "fuchsia.ui.composition.Flatland",
                "fuchsia.ui.composition.FlatlandDisplay",
                "fuchsia.ui.pointerinjector.Registry",
                "fuchsia.ui.scenic.Scenic",
                "fuchsia.ui.views.ViewRefInstalled",
            ],
            from: "#scenic",
            to: [ "#scene_manager" ],
        },
        {
            protocol: [
                "fuchsia.sysmem.Allocator",
                "fuchsia.tracing.provider.Registry",
            ],
            from: "parent",
            to: [ "#scene_manager" ],
        },
        {
            protocol: [ "fuchsia.ui.input3.KeyEventInjector" ],
            from: "#text_manager",
            to: [ "#scene_manager" ],
        },
        {
            protocol: [
                "fuchsia.input.injection.InputDeviceRegistry",
                "fuchsia.ui.input.InputDeviceRegistry",
            ],
            from: "#scene_manager",
            to: [ "#input_synthesis" ],
        },
    ],
    expose: [
        {
            protocol: [
                "test.inputsynthesis.Mouse",
                "test.inputsynthesis.Text",
            ],
            from: "#input_synthesis",
        },
        {
            protocol: [
                "fuchsia.input.injection.InputDeviceRegistry",
                "fuchsia.session.scene.Manager",
            ],
            from: "#scene_manager",
        },
        {
            protocol: [
                "fuchsia.ui.input.ImeService",
                "fuchsia.ui.input3.Keyboard",
            ],
            from: "#text_manager",
        },
    ],
}
