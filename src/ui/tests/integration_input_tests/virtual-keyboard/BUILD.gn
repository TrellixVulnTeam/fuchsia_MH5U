# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/fidl/fidl.gni")

fidl("test.virtualkeyboard") {
  sdk_category = "internal"
  sources = [ "input_position_listener.test.fidl" ]
  public_deps = [ "//zircon/vdso/zx" ]
}

executable("virtual-keyboard-test-bin") {
  testonly = true
  sources = [ "virtual-keyboard-test.cc" ]
  output_name = "virtual-keyboard-test"
  deps = [
    ":test.virtualkeyboard",
    "//sdk/fidl/fuchsia.accessibility.semantics",
    "//sdk/fidl/fuchsia.fonts",
    "//sdk/fidl/fuchsia.hardware.display",
    "//sdk/fidl/fuchsia.input.virtualkeyboard",
    "//sdk/fidl/fuchsia.intl",
    "//sdk/fidl/fuchsia.memorypressure",
    "//sdk/fidl/fuchsia.net.interfaces",
    "//sdk/fidl/fuchsia.netstack",
    "//sdk/fidl/fuchsia.sys",
    "//sdk/fidl/fuchsia.ui.accessibility.view",
    "//sdk/fidl/fuchsia.ui.app",
    "//sdk/fidl/fuchsia.ui.input",
    "//sdk/fidl/fuchsia.ui.pointerinjector",
    "//sdk/fidl/fuchsia.ui.policy",
    "//sdk/fidl/fuchsia.ui.scenic",
    "//sdk/fidl/fuchsia.vulkan.loader",
    "//sdk/fidl/fuchsia.web",
    "//sdk/lib/fdio",
    "//sdk/lib/fit",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/sys/cpp/testing:integration_fixture",
    "//sdk/lib/ui/scenic/cpp",
    "//src/lib/fostr/fidl/fuchsia.ui.gfx",
    "//src/lib/fostr/fidl/fuchsia.ui.input",
    "//src/lib/fxl",
    "//src/lib/fxl/test:gtest_main",
    "//src/lib/testing/loop_fixture",
    "//third_party/googletest:gtest",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/zx",
  ]
}

fuchsia_component("virtual-keyboard-test-component") {
  testonly = true
  manifest = "meta/virtual-keyboard-test.cmx"
  deps = [ ":virtual-keyboard-test-bin" ]
}

fuchsia_test_package("virtual-keyboard-test") {
  test_components = [ ":virtual-keyboard-test-component" ]
  deps = [
    "//src/connectivity/network/netstack:component-legacy",
    "//src/ui/bin/root_presenter:component_v1_for_test",
    "//src/ui/scenic:component",
  ]
  test_specs = {
    environments = [
      {
        dimensions = {
          # Ensure the device has Vulkan.
          device_type = "AEMU"
        }
        tags = [ "flaky" ]
      },
    ]
  }
}

group("tests") {
  testonly = true
  deps = [
    ":virtual-keyboard-test",

    # The deps below are necessary on minimal product configs.
    "//src/chromium:web_engine",
    "//src/cobalt/bin/testing/mock_cobalt",
    "//src/graphics/bin/vulkan_loader",
    "//src/testing/fidl/intl_property_manager",
    "//src/ui/bin/hardware_display_controller_provider:fake-hardware-display-controller-provider",
    "//src/ui/bin/text:text_manager",
    "//src/ui/tests/integration_input_tests/virtual-keyboard/web-virtual-keyboard-client",
  ]
}

# A variant which excludes `web_engine`, so that it can be built on products which
# include `web_engine` in `base`.
group("tests-product-webengine") {
  testonly = true
  deps = [
    ":virtual-keyboard-test",
    "//src/cobalt/bin/testing/mock_cobalt",
    "//src/graphics/bin/vulkan_loader",
    "//src/testing/fidl/intl_property_manager",
    "//src/ui/bin/hardware_display_controller_provider:fake-hardware-display-controller-provider",
    "//src/ui/bin/text:text_manager",
    "//src/ui/tests/integration_input_tests/virtual-keyboard/web-virtual-keyboard-client",
  ]
}
