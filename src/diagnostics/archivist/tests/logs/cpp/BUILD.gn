# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")

group("cpp") {
  testonly = true
  deps = [ ":cpp-logs-test" ]
}

executable("logs_integration_cpp_tests") {
  testonly = true

  sources = [ "logs_tests.cc" ]
  deps = [
    "//sdk/fidl/fuchsia.logger",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/sys/cpp/testing:integration_fixture",
    "//sdk/lib/syslog/cpp",
    "//src/lib/fsl",
    "//src/lib/fxl/test:gtest_main",
    "//src/lib/testing/loop_fixture",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest",
    "//zircon/system/ulib/syslog",
  ]
}

fuchsia_component("cpp-logs-test") {
  testonly = true
  manifest = "meta/cpp-logs.cml"
  deps = [ ":logs_integration_cpp_tests" ]
}

fuchsia_test("test-spec") {
  package = "//src/diagnostics/archivist/tests:archivist-integration-tests"
  component = ":cpp-logs-test"
  log_settings = {
    # this test emits trace through error logs to ensure verbosity round-trips correctly
    max_severity = "ERROR"
  }
}

group("cpp-structured") {
  testonly = true
  deps = [ ":cpp-logs-test-structured" ]
}

executable("logs_integration_structured_cpp_tests") {
  testonly = true

  sources = [ "logs_tests.cc" ]
  deps = [
    "//sdk/fidl/fuchsia.logger",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/sys/cpp/testing:integration_fixture",
    "//sdk/lib/syslog/cpp",
    "//sdk/lib/syslog/cpp:backend_fuchsia_compat",
    "//src/lib/fsl",
    "//src/lib/fxl/test:gtest_main",
    "//src/lib/testing/loop_fixture",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest",
    "//zircon/system/ulib/syslog",
  ]
}

fuchsia_component("cpp-logs-test-structured") {
  testonly = true
  manifest = "meta/cpp-logs-structured.cml"
  deps = [ ":logs_integration_structured_cpp_tests" ]
}

fuchsia_test("test-spec-structured") {
  package = "//src/diagnostics/archivist/tests:archivist-integration-tests"
  component = ":cpp-logs-test-structured"
  log_settings = {
    # this test emits trace through error logs to ensure verbosity round-trips correctly
    max_severity = "ERROR"
  }
}
