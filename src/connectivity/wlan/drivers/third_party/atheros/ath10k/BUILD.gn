#
# Copyright (c) 2018 The Fuchsia Authors.
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

import("//build/bind/bind.gni")
import("//build/cipd.gni")
import("//build/components.gni")
import("//build/drivers.gni")

driver_bind_rules("ath10k_bind") {
  rules = "ath10k_pci.bind"
  header_output = "ath10k_pci-bind.h"
  deps = [ "//src/devices/bind/fuchsia.pci" ]
  tests = "bind_tests.json"
}

group("tests") {
  testonly = true
  deps = [
    ":ath10k_bind_test",
    ":ath10k_test",
  ]
}

fuchsia_driver("ath10k_driver-driver") {
  output_name = "ath10k"

  sources = [
    "bitarr.c",
    "bmi.c",
    "bmi.h",
    "ce.c",
    "ce.h",
    "core.c",
    "core.h",
    "debug.h",
    "hif.h",
    "htc.c",
    "htc.h",
    "htt.c",
    "htt.h",
    "htt_rx.c",
    "htt_tx.c",
    "hw.c",
    "hw.h",
    "mac.c",
    "mac.h",
    "macros.h",
    "msg_buf.c",
    "msg_buf.h",
    "p2p.h",
    "pci.c",
    "pci.h",
    "rx_desc.h",
    "sparse_array.c",
    "sparse_array.h",
    "swap.c",
    "swap.h",
    "targaddrs.h",
    "testmode.h",
    "thermal.h",
    "txrx.c",
    "txrx.h",
    "utils.c",
    "utils.h",
    "wmi-ops.h",
    "wmi-tlv.c",
    "wmi-tlv.h",
    "wmi.c",
    "wmi.h",
    "wow.h",
  ]

  deps = [
    ":ath10k_bind",
    "//sdk/banjo/ddk.hw.wlan.ieee80211:ddk.hw.wlan.ieee80211_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.pci:fuchsia.hardware.pci_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.wlan.phyinfo:fuchsia.hardware.wlan.phyinfo_banjo_cpp",
    "//sdk/banjo/fuchsia.hardware.wlanphyimpl:fuchsia.hardware.wlanphyimpl_banjo_cpp",
    "//sdk/fidl/fuchsia.wlan.common:fuchsia.wlan.common_banjo_c",
    "//sdk/fidl/fuchsia.wlan.internal:fuchsia.wlan.internal_banjo_c",
    "//src/connectivity/wlan/lib/common/cpp:common",
    "//src/devices/lib/driver",
    "//src/devices/pci/lib/device-protocol-pci",
    "//src/lib/ddk",
    "//zircon/system/ulib/sync",
    "//zircon/system/ulib/zircon-internal",
    "//zircon/system/ulib/zx",
  ]

  public_deps = [ "//sdk/fidl/fuchsia.wlan.ieee80211:fuchsia.wlan.ieee80211_c" ]

  configs += [ "//build/config/fuchsia:enable_zircon_asserts" ]

  # Suppress warnings the atheros code doesn't comply with.
  configs += [ "//build/config:Wno-unused-but-set-variable" ]

  # TODO(https://fxbug.dev/58162): delete the below and fix compiler warnings
  configs += [ "//build/config:Wno-conversion" ]
}

fuchsia_driver_component("ath10k_driver") {
  info = "ath10k_driver-info.json"
  component_name = "ath10k"
  deps = [ ":ath10k_driver-driver" ]
  colocate = true
}

if (internal_access) {
  all_fw_files = [
    "QCA4019/hw1.0/board-2.bin",
    "QCA4019/hw1.0/firmware-5.bin",
    "QCA6174/hw2.1/board-2.bin",
    "QCA6174/hw2.1/board.bin",
    "QCA6174/hw2.1/firmware-5.bin",
    "QCA6174/hw3.0/board-2.bin",
    "QCA6174/hw3.0/board.bin",
    "QCA6174/hw3.0/firmware-4.bin",
    "QCA6174/hw3.0/firmware-6.bin",
    "QCA9377/hw1.0/board-2.bin",
    "QCA9377/hw1.0/board.bin",
    "QCA9377/hw1.0/firmware-5.bin",
    "QCA9887/hw1.0/board.bin",
    "QCA9887/hw1.0/firmware-5.bin",
    "QCA9888/hw2.0/board-2.bin",
    "QCA9888/hw2.0/firmware-5.bin",
    "QCA988X/hw2.0/board.bin",
    "QCA988X/hw2.0/firmware-4.bin",
    "QCA988X/hw2.0/firmware-5.bin",
    "QCA9984/hw1.0/board-2.bin",
    "QCA9984/hw1.0/firmware-5.bin",
    "QCA99X0/hw2.0/board.bin",
    "QCA99X0/hw2.0/firmware-5.bin",
  ]

  foreach(fw_file, all_fw_files) {
    resource("ath10k-firmware-" + fw_file) {
      sources = [ "firmware/" + fw_file ]
      outputs = [ "lib/firmware/ath10k/" + fw_file ]
    }
  }
}

fuchsia_driver_package("ath10k") {
  driver_components = [ ":ath10k_driver" ]

  deps = []
  if (internal_access) {
    foreach(fw_file, all_fw_files) {
      deps += [
        # The copy step has to be in the shared-library toolchain to use the
        # expected output directory, since we treat firmware blobs as if they
        # were libraries which always use the shared-library toolchain to build.
        ":ath10k-firmware-" + fw_file,
      ]
    }
  }

  # This package is reachable from //garnet/packages/prod:all
}

executable("sparse_array_tests") {
  output_name = "sparse_array_tests"
  testonly = true
  sources = [
    "sparse_array.c",
    "sparse_array.h",
    "sparse_array_tests.cc",
  ]

  deps = [ "//src/lib/fxl/test:gtest_main" ]
}

executable("bitarr_tests") {
  output_name = "bitarr_tests"
  testonly = true
  sources = [
    "bitarr.c",
    "bitarr.h",
    "bitarr_tests.cc",
  ]

  deps = [ "//src/lib/fxl/test:gtest_main" ]
}

_tests = [
  "bitarr_tests",
  "sparse_array_tests",
]
foreach(test_name, _tests) {
  fuchsia_unittest_component("${test_name}_component") {
    deps = [ ":${test_name}" ]
  }
}

fuchsia_test_package("ath10k_test") {
  test_components = []
  foreach(test_name, _tests) {
    test_components += [ ":${test_name}_component" ]
  }
}
