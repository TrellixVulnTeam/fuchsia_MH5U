# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/rust/rustc_binary.gni")
import("//src/sys/core/build/core_shard.gni")

core_shard("configurator_provider_shard") {
  shard_file = "meta/component.core_shard.cml"
}

group("configurator") {
  testonly = true
  deps = [
    ":package",
    ":tests",
  ]
}

group("tests") {
  testonly = true
  deps = [ ":configurator-unittests" ]
}

rustc_binary("bin") {
  output_name = "configurator"

  # Generates a GN target for unit-tests with the label `bin_test`, and
  # a binary named `configurator_bin_test`.
  with_unit_tests = true

  deps = [
    "//garnet/lib/rust/files_async",
    "//garnet/lib/rust/io_util",
    "//sdk/fidl/fuchsia.hardware.audio:fuchsia.hardware.audio-rustc",
    "//sdk/fidl/fuchsia.io:fuchsia.io-rustc",
    "//sdk/fidl/fuchsia.media:fuchsia.media-rustc",
    "//sdk/lib/device-watcher/rust",
    "//src/lib/diagnostics/inspect/runtime/rust",
    "//src/lib/diagnostics/inspect/rust",
    "//src/lib/fdio/rust:fdio",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/storage/fuchsia-vfs-watcher",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:async-trait",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:thiserror",
    "//third_party/rust_crates:tracing",
  ]

  sources = [
    "src/codec.rs",
    "src/configurator.rs",
    "src/default.rs",
    "src/discover.rs",
    "src/main.rs",
    "src/testing.rs",
  ]
  test_deps = [
    "//sdk/fidl/fuchsia.driver.test:fuchsia.driver.test-rustc",
    "//sdk/lib/device-watcher/rust",
    "//sdk/lib/driver_test_realm/realm_builder/rust",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component-test",
    "//third_party/rust_crates:anyhow",
  ]
}

fuchsia_component("component") {
  component_name = "configurator"
  manifest = "meta/configurator.cml"
  deps = [ ":bin" ]
}

fuchsia_package("package") {
  package_name = "configurator"
  deps = [ ":component" ]
}

# Run with `fx test configurator-unittests`.
fuchsia_unittest_package("configurator-unittests") {
  deps = [
    ":bin_test",
    "//src/devices/misc/drivers/test-parent",
    "//src/media/audio/drivers/codecs/test:test-codec",
  ]
}
