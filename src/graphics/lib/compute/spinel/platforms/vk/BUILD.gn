# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("../../../gn/build_rules.gni")

declare_args() {
  # Set this to true to enable bifrost targets.
  use_spinel_vk_bifrost_targets = false
}

config("spinel_vk_public_config") {
  # The sources and clients use 'spinel_xxx.h' to include the headers.
  include_dirs = [ "${graphics_compute_dir}/spinel/include/spinel" ]
}

static_library("vk") {
  output_name = "spinel_vk"
  include_dirs = [ "${graphics_compute_dir}/spinel" ]
  sources = [
    "allocator_device.c",
    "allocator_device.h",
    "block_pool.c",
    "block_pool.h",
    "composition_impl.c",
    "composition_impl.h",
    "core_vk.h",
    "device.c",
    "device.h",
    "dispatch.c",
    "dispatch.h",
    "expand_x.h",
    "handle_pool.c",
    "handle_pool.h",
    "path_builder_impl.c",
    "path_builder_impl.h",
    "queue_pool.c",
    "queue_pool.h",
    "raster_builder_impl.c",
    "raster_builder_impl.h",
    "render_impl.c",
    "render_impl.h",
    "ring.c",
    "ring.h",
    "status.c",
    "status.h",
    "styling_impl.c",
    "styling_impl.h",
    "trace.h",
    "vk.c",
    "vk.h",
    "vk_layouts.h",
    "vk_target.h",
    "vk_target_requirements.c",
    "vk_target_requirements.h",
  ]
  if (is_host) {
    defines = [ "SPN_VK_SHADER_INFO_AMD_STATISTICS" ]
  }
  deps = [
    "${graphics_compute_dir}/common",
    "${graphics_compute_dir}/common/vk",
    "${graphics_compute_dir}/hotsort/platforms/vk",
  ]
  public_deps = [
    "${graphics_compute_dir}/spinel",
    graphics_compute_vulkan_loader_target,
  ]
  public_configs = [ ":spinel_vk_public_config" ]

  # TODO(fxbug.dev/58162): delete the below and fix compiler warnings
  configs += [ "//build/config:Wno-conversion" ]
}

#
#
#
config("spinel_vk_ext_public_config") {
  include_dirs = [ "ext" ]

  defines = []
  if (board_name == "astro") {
    if (use_spinel_vk_bifrost_targets) {
      defines += [ "SPN_VK_TARGET_ARM_BIFROST4" ]
    }
  } else if (board_name == "sherlock" || board_name == "vim3") {
    if (use_spinel_vk_bifrost_targets) {
      defines += [ "SPN_VK_TARGET_ARM_BIFROST8" ]
    }
  } else if (board_name == "qemu-x64" || !is_fuchsia) {
    # Include amd, intel, and nvidia targets when building for emulator or host.
    defines += [
      "SPN_VK_TARGET_AMD_GCN3",
      "SPN_VK_TARGET_INTEL_GEN8",
      "SPN_VK_TARGET_NVIDIA_SM50",
    ]
  } else {
    # Include intel target by default.
    defines += [ "SPN_VK_TARGET_INTEL_GEN8" ]
  }
}

# A library used to load Spinel and Hotsort targets corresponding to a given
# Vulkan (vendor_id,device_id) tuple. For now, this statically links everything
# into the library. An alternative implementation may load the files from the
# filesystem, or customize the link to only include the targets required to
# run on the final device that will run the client application.
#
static_library("vk_find_target") {
  output_name = "spinel_vk_find_target"
  public = [ "ext/spinel_vk_find_target.h" ]
  sources = [
    "ext/spinel_vk_find_target.c",
    "ext/spinel_vk_find_target.h",
  ]
  include_dirs = [
    "$root_gen_dir/src/graphics/lib/compute/spinel/platforms/vk",
    ".",  # Necessary for the spn_target.h includes in the source file.
  ]
  deps = []

  # These deps need to agree with spinel_vk_ext_public_config.
  # Future support for dynamic linking will avoid that.
  if (board_name == "astro") {
    if (use_spinel_vk_bifrost_targets) {
      deps += [ "targets/vendors/arm/bifrost4:generate" ]
    }
  } else if (board_name == "sherlock" || board_name == "vim3") {
    if (use_spinel_vk_bifrost_targets) {
      deps += [ "targets/vendors/arm/bifrost8:generate" ]
    }
  } else if (board_name == "qemu-x64" || !is_fuchsia) {
    # Include amd, intel, and nvidia targets when building for emulator or host.
    deps += [
      "targets/vendors/amd/gcn3:generate",
      "targets/vendors/intel/gen8:generate",
      "targets/vendors/nvidia/sm50:generate",
    ]
  } else {
    # Include intel target by default.
    deps += [ "targets/vendors/intel/gen8:generate" ]
  }

  public_configs = [ ":spinel_vk_ext_public_config" ]
}
