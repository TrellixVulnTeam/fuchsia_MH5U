#ifndef __MY_CONFIG_LIB_H__
#define __MY_CONFIG_LIB_H__

#include <lib/sys/inspect/cpp/component.h>

#include <string>
#include <vector>

namespace cpp_elf_config_lib {
struct Config {
  bool my_flag;
  int16_t my_int16;
  int32_t my_int32;
  int64_t my_int64;
  int8_t my_int8;
  std::string my_string;
  uint16_t my_uint16;
  uint32_t my_uint32;
  uint64_t my_uint64;
  uint8_t my_uint8;
  std::vector<bool> my_vector_of_flag;
  std::vector<int16_t> my_vector_of_int16;
  std::vector<int32_t> my_vector_of_int32;
  std::vector<int64_t> my_vector_of_int64;
  std::vector<int8_t> my_vector_of_int8;
  std::vector<std::string> my_vector_of_string;
  std::vector<uint16_t> my_vector_of_uint16;
  std::vector<uint32_t> my_vector_of_uint32;
  std::vector<uint64_t> my_vector_of_uint64;
  std::vector<uint8_t> my_vector_of_uint8;

  static Config from_args() noexcept;

  void record_to_inspect(sys::ComponentInspector* inspector);
};
}  // namespace cpp_elf_config_lib

#endif
