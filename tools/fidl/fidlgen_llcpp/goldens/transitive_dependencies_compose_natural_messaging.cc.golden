// WARNING: This file is machine generated by fidlgen_llcpp.

#include <fidl/test.transitivedependenciescompose/cpp/natural_messaging.h>

namespace test_transitivedependenciescompose {
[[maybe_unused]] constexpr inline uint64_t kTop_GetFoo_Ordinal =
    2618685789258237543lu;

#ifdef __Fuchsia__
}  // namespace test_transitivedependenciescompose
void fidl::internal::
    NaturalClientImpl<::test_transitivedependenciescompose::Top>::GetFoo(
        ::fidl::ClientCallback<
            ::test_transitivedependenciescompose::Top::GetFoo>&& _callback)
        const {
  ::fidl::internal::NaturalMessageEncoder<::fidl::internal::ChannelTransport>
      _encoder{::test_transitivedependenciescompose::kTop_GetFoo_Ordinal};
  return messenger().TwoWay(
      nullptr,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(_encoder),
      ::fidl::internal::MakeResponseContext<
          ::fidl::Response<::test_transitivedependenciescompose::Top::GetFoo>,
          ::fidl::ClientCallback<
              ::test_transitivedependenciescompose::Top::GetFoo>>(
          ::test_transitivedependenciescompose::kTop_GetFoo_Ordinal,
          std::move(_callback)));
}
void fidl::internal::
    NaturalClientImpl<::test_transitivedependenciescompose::Top>::GetFoo(
        ::fidl::ClientResponseCallback<
            ::test_transitivedependenciescompose::Top::GetFoo>&& _callback)
        const {
  ::fidl::internal::NaturalMessageEncoder<::fidl::internal::ChannelTransport>
      _encoder{::test_transitivedependenciescompose::kTop_GetFoo_Ordinal};
  return messenger().TwoWay(
      nullptr,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(_encoder),
      ::fidl::internal::MakeResponseContext<
          ::fidl::Response<::test_transitivedependenciescompose::Top::GetFoo>,
          ::fidl::ClientResponseCallback<
              ::test_transitivedependenciescompose::Top::GetFoo>>(
          ::test_transitivedependenciescompose::kTop_GetFoo_Ordinal,
          std::move(_callback)));
}
namespace test_transitivedependenciescompose {
#endif  // __Fuchsia__

}  // namespace test_transitivedependenciescompose
#ifdef __Fuchsia__

std::optional<::fidl::UnbindInfo> fidl::internal::NaturalEventDispatcher<
    ::test_transitivedependenciescompose::Top>::
    DispatchEvent(
        ::fidl::IncomingMessage& msg,
        ::fidl::internal::IncomingTransportContext transport_context) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

void fidl::internal::NaturalCompleterBase<
    ::test_transitivedependenciescompose::Top::GetFoo>::
    Reply(::test_bottom::BottomGetFooTopResponse&& payload) {
  ::fidl::internal::NaturalServerMessenger _messenger{this};
  ::fidl::internal::NaturalMessageEncoder<::fidl::internal::ChannelTransport>
      _encoder{::test_transitivedependenciescompose::kTop_GetFoo_Ordinal};
  _messenger.SendReply(
      &::test_transitivedependenciescompose::
          test_bottom_BottomGetFooTopResponseTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(
          _encoder, std::move(payload)));
}

#ifdef __Fuchsia__

constexpr ::fidl::internal::MethodEntry fidl::internal::NaturalServerDispatcher<
    ::test_transitivedependenciescompose::Top>::entries_[] = {
    {
        ::test_transitivedependenciescompose::kTop_GetFoo_Ordinal,
        [](void* interface, ::fidl::IncomingMessage&& msg,
           internal::IncomingTransportContext transport_context,
           ::fidl::Transaction* txn) {
          ::fitx::result<::fidl::Error,
                         ::fidl::Request<
                             ::test_transitivedependenciescompose::Top::GetFoo>>
              decoded = ::fidl::Request<
                  ::test_transitivedependenciescompose::Top::GetFoo>::
                  DecodeTransactional(std::move(msg));
          if (decoded.is_error()) {
            return decoded.error_value().status();
          }
          ::fidl::internal::NaturalCompleter<
              ::test_transitivedependenciescompose::Top::GetFoo>::Sync
              completer(txn);
          static_cast<
              ::fidl::Server<::test_transitivedependenciescompose::Top>*>(
              interface)
              ->GetFoo(decoded.value(), completer);
          return ZX_OK;
        },
    },
};

const ::fidl::internal::MethodEntry* fidl::internal::NaturalServerDispatcher<
    ::test_transitivedependenciescompose::Top>::entries_end_ = &entries_[1];

void fidl::internal::NaturalServerDispatcher<
    ::test_transitivedependenciescompose::Top>::
    Dispatch(::fidl::Server<::test_transitivedependenciescompose::Top>* impl,
             ::fidl::IncomingMessage&& msg,
             internal::IncomingTransportContext transport_context,
             ::fidl::Transaction* txn) {
  ::fidl::internal::Dispatch(impl, msg, std::move(transport_context), txn,
                             entries_, entries_end_);
}
void fidl::Server<::test_transitivedependenciescompose::Top>::dispatch_message(
    ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn,
    ::fidl::internal::IncomingTransportContext transport_context) {
  ::fidl::internal::NaturalServerDispatcher<
      ::test_transitivedependenciescompose::Top>::
      Dispatch(this, std::move(msg), std::move(transport_context), txn);
}
#endif  // __Fuchsia__
