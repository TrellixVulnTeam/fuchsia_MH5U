// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test.protocolrequest/cpp/wire.h>
namespace fidl {
namespace testing {

template <>
class WireTestBase<::test_protocolrequest::Parent>
    : public ::fidl::WireServer<::test_protocolrequest::Parent> {
 public:
  virtual ~WireTestBase<::test_protocolrequest::Parent>() {}
  virtual void NotImplemented_(const std::string& name,
                               ::fidl::CompleterBase& completer) = 0;
  virtual void GetChild(GetChildRequestView request,
                        GetChildCompleter::Sync& _completer) override {
    NotImplemented_("GetChild", _completer);
  }
  virtual void GetChildRequest(
      GetChildRequestRequestView request,
      GetChildRequestCompleter::Sync& _completer) override {
    NotImplemented_("GetChildRequest", _completer);
  }
  virtual void TakeChild(TakeChildRequestView request,
                         TakeChildCompleter::Sync& _completer) override {
    NotImplemented_("TakeChild", _completer);
  }
  virtual void TakeChildRequest(
      TakeChildRequestRequestView request,
      TakeChildRequestCompleter::Sync& _completer) override {
    NotImplemented_("TakeChildRequest", _completer);
  }
};

template <>
class WireTestBase<::test_protocolrequest::Child>
    : public ::fidl::WireServer<::test_protocolrequest::Child> {
 public:
  virtual ~WireTestBase<::test_protocolrequest::Child>() {}
  virtual void NotImplemented_(const std::string& name,
                               ::fidl::CompleterBase& completer) = 0;
};
}  // namespace testing
}  // namespace fidl
