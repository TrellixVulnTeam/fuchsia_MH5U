// WARNING: This file is machine generated by fidlgen_llcpp.

#include <fidl/test.doccomments/cpp/natural_messaging.h>

namespace test_doccomments {
[[maybe_unused]] constexpr inline uint64_t kInterface_Method_Ordinal =
    5017051197196532121lu;
[[maybe_unused]] constexpr inline uint64_t kInterface_OnEvent_Ordinal =
    28780186509098736lu;

#ifdef __Fuchsia__
}  // namespace test_doccomments
::fitx::result<::fidl::Error> fidl::internal::NaturalClientImpl<
    ::test_doccomments::Interface>::Method() const {
  ::fidl::internal::NaturalMessageEncoder<::fidl::internal::ChannelTransport>
      _encoder{::test_doccomments::kInterface_Method_Ordinal};
  ::fidl::Result result = messenger().OneWay(
      nullptr,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(_encoder));
  return ::fidl::internal::ToFitxResult(result);
}
namespace test_doccomments {
#endif  // __Fuchsia__

}  // namespace test_doccomments
#ifdef __Fuchsia__

std::optional<::fidl::UnbindInfo> fidl::internal::
    NaturalEventDispatcher<::test_doccomments::Interface>::DispatchEvent(
        ::fidl::IncomingMessage& msg,
        ::fidl::internal::IncomingTransportContext transport_context) {
  switch (msg.header()->ordinal) {
    case ::test_doccomments::kInterface_OnEvent_Ordinal: {
      ::fitx::result<::fidl::Error,
                     ::fidl::Event<::test_doccomments::Interface::OnEvent>>
          decoded = ::fidl::Event<::test_doccomments::Interface::OnEvent>::
              DecodeTransactional(std::move(msg));
      if (decoded.is_error()) {
        return ::fidl::UnbindInfo(decoded.error_value());
      }
      if (event_handler()) {
        event_handler()->OnEvent(decoded.value());
      }
      return std::nullopt;
    }
    default:
      break;
  }
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fitx::result<::fidl::Error> fidl::internal::NaturalWeakEventSender<
    ::test_doccomments::Interface>::OnEvent() {
  ::fidl::internal::NaturalMessageEncoder<::fidl::internal::ChannelTransport>
      _encoder{::test_doccomments::kInterface_OnEvent_Ordinal};
  ::fidl::Result result = ::fidl::internal::ConvertFromHLCPPOutgoingMessageThen(
      nullptr,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(_encoder),
      [this](fidl::OutgoingMessage outgoing) {
        return _inner().SendEvent(outgoing);
      });
  return ::fidl::internal::ToFitxResult(result);
}

::fitx::result<::fidl::Error>
fidl::internal::NaturalEventSender<::test_doccomments::Interface>::OnEvent() {
  ::fidl::internal::NaturalMessageEncoder<::fidl::internal::ChannelTransport>
      _encoder{::test_doccomments::kInterface_OnEvent_Ordinal};
  ::fidl::Result result = ::fidl::internal::ConvertFromHLCPPOutgoingMessageThen(
      nullptr,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(_encoder),
      [this](fidl::OutgoingMessage outgoing) {
        outgoing.Write(_transport());
        return ::fidl::Result{outgoing};
      });
  return ::fidl::internal::ToFitxResult(result);
}

#endif  // __Fuchsia__

#ifdef __Fuchsia__

constexpr ::fidl::internal::MethodEntry fidl::internal::NaturalServerDispatcher<
    ::test_doccomments::Interface>::entries_[] = {
    {
        ::test_doccomments::kInterface_Method_Ordinal,
        [](void* interface, ::fidl::IncomingMessage&& msg,
           internal::IncomingTransportContext transport_context,
           ::fidl::Transaction* txn) {
          ::fitx::result<::fidl::Error,
                         ::fidl::Request<::test_doccomments::Interface::Method>>
              decoded = ::fidl::Request<::test_doccomments::Interface::Method>::
                  DecodeTransactional(std::move(msg));
          if (decoded.is_error()) {
            return decoded.error_value().status();
          }
          ::fidl::internal::NaturalCompleter<
              ::test_doccomments::Interface::Method>::Sync completer(txn);
          static_cast<::fidl::Server<::test_doccomments::Interface>*>(interface)
              ->Method(decoded.value(), completer);
          return ZX_OK;
        },
    },
};

const ::fidl::internal::MethodEntry* fidl::internal::NaturalServerDispatcher<
    ::test_doccomments::Interface>::entries_end_ = &entries_[1];

void fidl::internal::NaturalServerDispatcher<::test_doccomments::Interface>::
    Dispatch(::fidl::Server<::test_doccomments::Interface>* impl,
             ::fidl::IncomingMessage&& msg,
             internal::IncomingTransportContext transport_context,
             ::fidl::Transaction* txn) {
  ::fidl::internal::Dispatch(impl, msg, std::move(transport_context), txn,
                             entries_, entries_end_);
}
void fidl::Server<::test_doccomments::Interface>::dispatch_message(
    ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn,
    ::fidl::internal::IncomingTransportContext transport_context) {
  ::fidl::internal::NaturalServerDispatcher<
      ::test_doccomments::Interface>::Dispatch(this, std::move(msg),
                                               std::move(transport_context),
                                               txn);
}
#endif  // __Fuchsia__
