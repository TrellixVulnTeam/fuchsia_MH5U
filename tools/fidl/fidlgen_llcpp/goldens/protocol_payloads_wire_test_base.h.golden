// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test.protocolpayloads/cpp/wire.h>
namespace fidl {
namespace testing {

template <>
class WireTestBase<::test_protocolpayloads::MainProtocol>
    : public ::fidl::WireServer<::test_protocolpayloads::MainProtocol> {
 public:
  virtual ~WireTestBase<::test_protocolpayloads::MainProtocol>() {}
  virtual void NotImplemented_(const std::string& name,
                               ::fidl::CompleterBase& completer) = 0;
  virtual void OneWayComposed(
      OneWayComposedRequestView request,
      OneWayComposedCompleter::Sync& _completer) override {
    NotImplemented_("OneWayComposed", _completer);
  }
  virtual void TwoWayComposed(
      TwoWayComposedRequestView request,
      TwoWayComposedCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayComposed", _completer);
  }
  virtual void TwoWayComposedWithError(
      TwoWayComposedWithErrorRequestView request,
      TwoWayComposedWithErrorCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayComposedWithError", _completer);
  }
  virtual void OneWayLocal(OneWayLocalRequestView request,
                           OneWayLocalCompleter::Sync& _completer) override {
    NotImplemented_("OneWayLocal", _completer);
  }
  virtual void TwoWayLocal(TwoWayLocalRequestView request,
                           TwoWayLocalCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayLocal", _completer);
  }
  virtual void TwoWayLocalWithError(
      TwoWayLocalWithErrorRequestView request,
      TwoWayLocalWithErrorCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayLocalWithError", _completer);
  }
  virtual void OneWayImport(OneWayImportRequestView request,
                            OneWayImportCompleter::Sync& _completer) override {
    NotImplemented_("OneWayImport", _completer);
  }
  virtual void TwoWayImport(TwoWayImportRequestView request,
                            TwoWayImportCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayImport", _completer);
  }
  virtual void TwoWayImportWithError(
      TwoWayImportWithErrorRequestView request,
      TwoWayImportWithErrorCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayImportWithError", _completer);
  }
  virtual void OneWayAnon(OneWayAnonRequestView request,
                          OneWayAnonCompleter::Sync& _completer) override {
    NotImplemented_("OneWayAnon", _completer);
  }
  virtual void TwoWayAnon(TwoWayAnonRequestView request,
                          TwoWayAnonCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayAnon", _completer);
  }
  virtual void TwoWayAnonWithError(
      TwoWayAnonWithErrorRequestView request,
      TwoWayAnonWithErrorCompleter::Sync& _completer) override {
    NotImplemented_("TwoWayAnonWithError", _completer);
  }
};
}  // namespace testing
}  // namespace fidl
