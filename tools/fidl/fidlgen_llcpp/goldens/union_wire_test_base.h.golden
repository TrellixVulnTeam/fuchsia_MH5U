// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test.union/cpp/wire.h>
namespace fidl {
namespace testing {

template <>
class WireTestBase<::test_union::TestProtocol>
    : public ::fidl::WireServer<::test_union::TestProtocol> {
 public:
  virtual ~WireTestBase<::test_union::TestProtocol>() {}
  virtual void NotImplemented_(const std::string& name,
                               ::fidl::CompleterBase& completer) = 0;
  virtual void StrictXUnionHenceResponseMayBeStackAllocated(
      StrictXUnionHenceResponseMayBeStackAllocatedRequestView request,
      StrictXUnionHenceResponseMayBeStackAllocatedCompleter::Sync& _completer)
      override {
    NotImplemented_("StrictXUnionHenceResponseMayBeStackAllocated", _completer);
  }
  virtual void FlexibleXUnionHenceResponseMustBeHeapAllocated(
      FlexibleXUnionHenceResponseMustBeHeapAllocatedRequestView request,
      FlexibleXUnionHenceResponseMustBeHeapAllocatedCompleter::Sync& _completer)
      override {
    NotImplemented_("FlexibleXUnionHenceResponseMustBeHeapAllocated",
                    _completer);
  }
};
}  // namespace testing
}  // namespace fidl
