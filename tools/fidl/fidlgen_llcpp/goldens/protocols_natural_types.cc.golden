// WARNING: This file is machine generated by fidlgen.

#include <fidl/test.protocols/cpp/natural_types.h>

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::WithErrorSyntax_ResponseAsStruct_Response::Storage_
test_protocols::WithErrorSyntax_ResponseAsStruct_Response::CloneStorage_()
    const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a),
                  ::fidl::internal::NaturalClone(storage_.b),
                  ::fidl::internal::NaturalClone(storage_.c)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::WithErrorSyntaxResponseAsStructTopResponse::Storage_
test_protocols::WithErrorSyntaxResponseAsStructTopResponse::CloneStorage_()
    const {
  return Storage_{::fidl::internal::NaturalClone(storage_.result)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::WithErrorSyntax_ErrorAsPrimitive_Response::Storage_
test_protocols::WithErrorSyntax_ErrorAsPrimitive_Response::CloneStorage_()
    const {
  return Storage_{::fidl::internal::NaturalClone(storage_.__reserved)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::WithErrorSyntaxErrorAsPrimitiveTopResponse::Storage_
test_protocols::WithErrorSyntaxErrorAsPrimitiveTopResponse::CloneStorage_()
    const {
  return Storage_{::fidl::internal::NaturalClone(storage_.result)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::WithErrorSyntax_ErrorAsEnum_Response::Storage_
test_protocols::WithErrorSyntax_ErrorAsEnum_Response::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.__reserved)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::
    WithAndWithoutRequestResponseWithRequestWithResponseTopResponse::Storage_
    test_protocols::
        WithAndWithoutRequestResponseWithRequestWithResponseTopResponse::
            CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.ret)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::WithAndWithoutRequestResponseWithRequestWithResponseRequest::
    Storage_
    test_protocols::
        WithAndWithoutRequestResponseWithRequestWithResponseRequest::
            CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.arg)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest::
    Storage_
    test_protocols::WithAndWithoutRequestResponseWithRequestNoResponseRequest::
        CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.arg)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::WithAndWithoutRequestResponseWithRequestEmptyResponseRequest::
    Storage_
    test_protocols::
        WithAndWithoutRequestResponseWithRequestEmptyResponseRequest::
            CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.arg)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest::Storage_
test_protocols::WithAndWithoutRequestResponseOnWithResponseRequest::
    CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.ret)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::
    WithAndWithoutRequestResponseNoRequestWithResponseTopResponse::Storage_
    test_protocols::
        WithAndWithoutRequestResponseNoRequestWithResponseTopResponse::
            CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.ret)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::TransitionalRequestTopResponse::Storage_
test_protocols::TransitionalRequestTopResponse::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.y)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::TransitionalRequestRequest::Storage_
test_protocols::TransitionalRequestRequest::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.x)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::TransitionalOneWayRequest::Storage_
test_protocols::TransitionalOneWayRequest::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.x)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::TransitionalEventRequest::Storage_
test_protocols::TransitionalEventRequest::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.x)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::MethodWithUnionUnionMethodRequest::Storage_
test_protocols::MethodWithUnionUnionMethodRequest::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.u)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::SyscallProtocolMethodCRequest::Storage_
test_protocols::SyscallProtocolMethodCRequest::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a),
                  ::fidl::internal::NaturalClone(storage_.b)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::ManyParametersFifteenRequest::Storage_
test_protocols::ManyParametersFifteenRequest::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.p1),
                  ::fidl::internal::NaturalClone(storage_.p2),
                  ::fidl::internal::NaturalClone(storage_.p3),
                  ::fidl::internal::NaturalClone(storage_.p4),
                  ::fidl::internal::NaturalClone(storage_.p5),
                  ::fidl::internal::NaturalClone(storage_.p6),
                  ::fidl::internal::NaturalClone(storage_.p7),
                  ::fidl::internal::NaturalClone(storage_.p8),
                  ::fidl::internal::NaturalClone(storage_.p9),
                  ::fidl::internal::NaturalClone(storage_.p10),
                  ::fidl::internal::NaturalClone(storage_.p11),
                  ::fidl::internal::NaturalClone(storage_.p12),
                  ::fidl::internal::NaturalClone(storage_.p13),
                  ::fidl::internal::NaturalClone(storage_.p14),
                  ::fidl::internal::NaturalClone(storage_.p15)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::WithErrorSyntaxErrorAsEnumTopResponse::Storage_
test_protocols::WithErrorSyntaxErrorAsEnumTopResponse::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.result)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::ChannelProtocolMethodBTopResponse::Storage_
test_protocols::ChannelProtocolMethodBTopResponse::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.result)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::ChannelProtocolMethodBRequest::Storage_
test_protocols::ChannelProtocolMethodBRequest::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a),
                  ::fidl::internal::NaturalClone(storage_.b)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::ChannelProtocolMethodARequest::Storage_
test_protocols::ChannelProtocolMethodARequest::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a),
                  ::fidl::internal::NaturalClone(storage_.b)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocols::ChannelProtocolEventARequest::Storage_
test_protocols::ChannelProtocolEventARequest::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a),
                  ::fidl::internal::NaturalClone(storage_.b)};
}

std::shared_ptr<
    ::test_protocols::WithErrorSyntax_ResponseAsStruct_Result::Storage_>
test_protocols::WithErrorSyntax_ResponseAsStruct_Result::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}

std::shared_ptr<
    ::test_protocols::WithErrorSyntax_ErrorAsPrimitive_Result::Storage_>
test_protocols::WithErrorSyntax_ErrorAsPrimitive_Result::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}

std::shared_ptr<::test_protocols::TheUnion::Storage_>
test_protocols::TheUnion::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}

std::shared_ptr<::test_protocols::WithErrorSyntax_ErrorAsEnum_Result::Storage_>
test_protocols::WithErrorSyntax_ErrorAsEnum_Result::CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
