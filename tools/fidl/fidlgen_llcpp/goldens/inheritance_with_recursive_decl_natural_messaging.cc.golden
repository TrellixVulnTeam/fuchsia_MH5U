// WARNING: This file is machine generated by fidlgen_llcpp.

#include <fidl/test.inheritancewithrecursivedecl/cpp/natural_messaging.h>

namespace test_inheritancewithrecursivedecl {
[[maybe_unused]] constexpr inline uint64_t kParent_First_Ordinal =
    3973163707930985819lu;

#ifdef __Fuchsia__
}  // namespace test_inheritancewithrecursivedecl
::fitx::result<::fidl::Error> fidl::internal::
    NaturalClientImpl<::test_inheritancewithrecursivedecl::Parent>::First(
        ::test_inheritancewithrecursivedecl::ParentFirstRequest&& payload)
        const {
  ::fidl::internal::NaturalMessageEncoder<::fidl::internal::ChannelTransport>
      _encoder{::test_inheritancewithrecursivedecl::kParent_First_Ordinal};
  ::fidl::Result result = messenger().OneWay(
      &::test_inheritancewithrecursivedecl::
          test_inheritancewithrecursivedecl_ParentFirstRequestTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(
          _encoder, std::move(payload)));
  return ::fidl::internal::ToFitxResult(result);
}
namespace test_inheritancewithrecursivedecl {
#endif  // __Fuchsia__

}  // namespace test_inheritancewithrecursivedecl
#ifdef __Fuchsia__

std::optional<::fidl::UnbindInfo> fidl::internal::NaturalEventDispatcher<
    ::test_inheritancewithrecursivedecl::Parent>::
    DispatchEvent(
        ::fidl::IncomingMessage& msg,
        ::fidl::internal::IncomingTransportContext transport_context) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

constexpr ::fidl::internal::MethodEntry fidl::internal::NaturalServerDispatcher<
    ::test_inheritancewithrecursivedecl::Parent>::entries_[] = {
    {
        ::test_inheritancewithrecursivedecl::kParent_First_Ordinal,
        [](void* interface, ::fidl::IncomingMessage&& msg,
           internal::IncomingTransportContext transport_context,
           ::fidl::Transaction* txn) {
          ::fitx::result<
              ::fidl::Error,
              ::fidl::Request<
                  ::test_inheritancewithrecursivedecl::Parent::First>>
              decoded = ::fidl::Request<
                  ::test_inheritancewithrecursivedecl::Parent::First>::
                  DecodeTransactional(std::move(msg));
          if (decoded.is_error()) {
            return decoded.error_value().status();
          }
          ::fidl::internal::NaturalCompleter<
              ::test_inheritancewithrecursivedecl::Parent::First>::Sync
              completer(txn);
          static_cast<
              ::fidl::Server<::test_inheritancewithrecursivedecl::Parent>*>(
              interface)
              ->First(decoded.value(), completer);
          return ZX_OK;
        },
    },
};

const ::fidl::internal::MethodEntry* fidl::internal::NaturalServerDispatcher<
    ::test_inheritancewithrecursivedecl::Parent>::entries_end_ = &entries_[1];

void fidl::internal::NaturalServerDispatcher<
    ::test_inheritancewithrecursivedecl::Parent>::
    Dispatch(::fidl::Server<::test_inheritancewithrecursivedecl::Parent>* impl,
             ::fidl::IncomingMessage&& msg,
             internal::IncomingTransportContext transport_context,
             ::fidl::Transaction* txn) {
  ::fidl::internal::Dispatch(impl, msg, std::move(transport_context), txn,
                             entries_, entries_end_);
}
void fidl::Server<::test_inheritancewithrecursivedecl::Parent>::
    dispatch_message(
        ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn,
        ::fidl::internal::IncomingTransportContext transport_context) {
  ::fidl::internal::NaturalServerDispatcher<
      ::test_inheritancewithrecursivedecl::Parent>::
      Dispatch(this, std::move(msg), std::move(transport_context), txn);
}
#endif  // __Fuchsia__

namespace test_inheritancewithrecursivedecl {
[[maybe_unused]] constexpr inline uint64_t kChild_First_Ordinal =
    3973163707930985819lu;
[[maybe_unused]] constexpr inline uint64_t kChild_Second_Ordinal =
    2545123272820824165lu;

#ifdef __Fuchsia__
}  // namespace test_inheritancewithrecursivedecl
::fitx::result<::fidl::Error> fidl::internal::
    NaturalClientImpl<::test_inheritancewithrecursivedecl::Child>::First(
        ::test_inheritancewithrecursivedecl::ParentFirstRequest&& payload)
        const {
  ::fidl::internal::NaturalMessageEncoder<::fidl::internal::ChannelTransport>
      _encoder{::test_inheritancewithrecursivedecl::kChild_First_Ordinal};
  ::fidl::Result result = messenger().OneWay(
      &::test_inheritancewithrecursivedecl::
          test_inheritancewithrecursivedecl_ParentFirstRequestTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(
          _encoder, std::move(payload)));
  return ::fidl::internal::ToFitxResult(result);
}

::fitx::result<::fidl::Error> fidl::internal::
    NaturalClientImpl<::test_inheritancewithrecursivedecl::Child>::Second(
        ::test_inheritancewithrecursivedecl::ChildSecondRequest&& payload)
        const {
  ::fidl::internal::NaturalMessageEncoder<::fidl::internal::ChannelTransport>
      _encoder{::test_inheritancewithrecursivedecl::kChild_Second_Ordinal};
  ::fidl::Result result = messenger().OneWay(
      &::test_inheritancewithrecursivedecl::
          test_inheritancewithrecursivedecl_ChildSecondRequestTable,
      ::fidl::internal::EncodeTransactionalMessageWithoutValidating(
          _encoder, std::move(payload)));
  return ::fidl::internal::ToFitxResult(result);
}
namespace test_inheritancewithrecursivedecl {
#endif  // __Fuchsia__

}  // namespace test_inheritancewithrecursivedecl
#ifdef __Fuchsia__

std::optional<::fidl::UnbindInfo> fidl::internal::NaturalEventDispatcher<
    ::test_inheritancewithrecursivedecl::Child>::
    DispatchEvent(
        ::fidl::IncomingMessage& msg,
        ::fidl::internal::IncomingTransportContext transport_context) {
  return ::fidl::UnbindInfo::UnknownOrdinal();
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

constexpr ::fidl::internal::MethodEntry fidl::internal::NaturalServerDispatcher<
    ::test_inheritancewithrecursivedecl::Child>::entries_[] = {
    {
        ::test_inheritancewithrecursivedecl::kChild_First_Ordinal,
        [](void* interface, ::fidl::IncomingMessage&& msg,
           internal::IncomingTransportContext transport_context,
           ::fidl::Transaction* txn) {
          ::fitx::result<::fidl::Error,
                         ::fidl::Request<
                             ::test_inheritancewithrecursivedecl::Child::First>>
              decoded = ::fidl::Request<
                  ::test_inheritancewithrecursivedecl::Child::First>::
                  DecodeTransactional(std::move(msg));
          if (decoded.is_error()) {
            return decoded.error_value().status();
          }
          ::fidl::internal::NaturalCompleter<
              ::test_inheritancewithrecursivedecl::Child::First>::Sync
              completer(txn);
          static_cast<
              ::fidl::Server<::test_inheritancewithrecursivedecl::Child>*>(
              interface)
              ->First(decoded.value(), completer);
          return ZX_OK;
        },
    },
    {
        ::test_inheritancewithrecursivedecl::kChild_Second_Ordinal,
        [](void* interface, ::fidl::IncomingMessage&& msg,
           internal::IncomingTransportContext transport_context,
           ::fidl::Transaction* txn) {
          ::fitx::result<
              ::fidl::Error,
              ::fidl::Request<
                  ::test_inheritancewithrecursivedecl::Child::Second>>
              decoded = ::fidl::Request<
                  ::test_inheritancewithrecursivedecl::Child::Second>::
                  DecodeTransactional(std::move(msg));
          if (decoded.is_error()) {
            return decoded.error_value().status();
          }
          ::fidl::internal::NaturalCompleter<
              ::test_inheritancewithrecursivedecl::Child::Second>::Sync
              completer(txn);
          static_cast<
              ::fidl::Server<::test_inheritancewithrecursivedecl::Child>*>(
              interface)
              ->Second(decoded.value(), completer);
          return ZX_OK;
        },
    },
};

const ::fidl::internal::MethodEntry* fidl::internal::NaturalServerDispatcher<
    ::test_inheritancewithrecursivedecl::Child>::entries_end_ = &entries_[2];

void fidl::internal::NaturalServerDispatcher<
    ::test_inheritancewithrecursivedecl::Child>::
    Dispatch(::fidl::Server<::test_inheritancewithrecursivedecl::Child>* impl,
             ::fidl::IncomingMessage&& msg,
             internal::IncomingTransportContext transport_context,
             ::fidl::Transaction* txn) {
  ::fidl::internal::Dispatch(impl, msg, std::move(transport_context), txn,
                             entries_, entries_end_);
}
void fidl::Server<::test_inheritancewithrecursivedecl::Child>::dispatch_message(
    ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn,
    ::fidl::internal::IncomingTransportContext transport_context) {
  ::fidl::internal::NaturalServerDispatcher<
      ::test_inheritancewithrecursivedecl::Child>::
      Dispatch(this, std::move(msg), std::move(transport_context), txn);
}
#endif  // __Fuchsia__
