// WARNING: This file is machine generated by fidlgen.

#include <fidl/test.driverhandle/cpp/driver/wire_messaging.h>

#include <memory>

#ifdef __Fuchsia__

#endif  // __Fuchsia__

#ifdef __Fuchsia__

::fidl::Result
fidl::WireSyncEventHandler<::test_driverhandle::DriverProtocol>::HandleOneEvent(
    ::fdf::UnownedClientEnd<::test_driverhandle::DriverProtocol> client_end) {
  ZX_PANIC("events not supported for transport 'Driver'");
}
std::optional<::fidl::UnbindInfo> fidl::internal::
    WireEventDispatcher<::test_driverhandle::DriverProtocol>::DispatchEvent(
        fidl::IncomingMessage& msg,
        internal::IncomingTransportContext transport_context) {
  ZX_PANIC("events not supported for transport 'Driver'");
}
#endif  // __Fuchsia__

#ifdef __Fuchsia__

constexpr ::fidl::internal::MethodEntry fidl::internal::WireServerDispatcher<
    ::test_driverhandle::DriverProtocol>::entries_[] = {};

const ::fidl::internal::MethodEntry* fidl::internal::WireServerDispatcher<
    ::test_driverhandle::DriverProtocol>::entries_end_ = &entries_[0];

::fidl::DispatchResult fidl::internal::
    WireServerDispatcher<::test_driverhandle::DriverProtocol>::TryDispatch(
        ::fdf::WireServer<::test_driverhandle::DriverProtocol>* impl,
        ::fidl::IncomingMessage& msg,
        internal::IncomingTransportContext transport_context,
        ::fidl::Transaction* txn) {
  return ::fidl::internal::TryDispatch(impl, msg, std::move(transport_context),
                                       txn, entries_, entries_end_);
}

void fidl::internal::WireServerDispatcher<::test_driverhandle::DriverProtocol>::
    Dispatch(::fdf::WireServer<::test_driverhandle::DriverProtocol>* impl,
             ::fidl::IncomingMessage&& msg,
             internal::IncomingTransportContext transport_context,
             ::fidl::Transaction* txn) {
  ::fidl::internal::Dispatch(impl, msg, std::move(transport_context), txn,
                             entries_, entries_end_);
}
void fdf::WireServer<::test_driverhandle::DriverProtocol>::dispatch_message(
    ::fidl::IncomingMessage&& msg, ::fidl::Transaction* txn,
    ::fidl::internal::IncomingTransportContext transport_context) {
  ::fidl::internal::WireServerDispatcher<::test_driverhandle::DriverProtocol>::
      Dispatch(this, std::move(msg), std::move(transport_context), txn);
}
#endif  // __Fuchsia__
