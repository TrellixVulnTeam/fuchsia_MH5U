// WARNING: This file is machine generated by fidlgen.

#include <fidl/test.protocolpayloads/cpp/natural_types.h>

#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocolpayloads::MainProtocolTwoWayImportWithErrorTopResponse::Storage_
test_protocolpayloads::MainProtocolTwoWayImportWithErrorTopResponse::
    CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.result)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocolpayloads::MainProtocol_TwoWayAnonWithError_Response::Storage_
test_protocolpayloads::MainProtocol_TwoWayAnonWithError_Response::
    CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a),
                  ::fidl::internal::NaturalClone(storage_.b)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocolpayloads::MainProtocolTwoWayAnonWithErrorTopResponse::Storage_
test_protocolpayloads::MainProtocolTwoWayAnonWithErrorTopResponse::
    CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.result)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocolpayloads::MainProtocolOnImportWithErrorRequest::Storage_
test_protocolpayloads::MainProtocolOnImportWithErrorRequest::CloneStorage_()
    const {
  return Storage_{::fidl::internal::NaturalClone(storage_.result)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocolpayloads::MainProtocol_OnAnonWithError_Response::Storage_
test_protocolpayloads::MainProtocol_OnAnonWithError_Response::CloneStorage_()
    const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a),
                  ::fidl::internal::NaturalClone(storage_.b)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocolpayloads::MainProtocolOnAnonWithErrorRequest::Storage_
test_protocolpayloads::MainProtocolOnAnonWithErrorRequest::CloneStorage_()
    const {
  return Storage_{::fidl::internal::NaturalClone(storage_.result)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocolpayloads::MainProtocolTwoWayAnonWithErrorRequest::Storage_
test_protocolpayloads::MainProtocolTwoWayAnonWithErrorRequest::CloneStorage_()
    const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a),
                  ::fidl::internal::NaturalClone(storage_.b)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocolpayloads::MainProtocolTwoWayAnonTopResponse::Storage_
test_protocolpayloads::MainProtocolTwoWayAnonTopResponse::CloneStorage_()
    const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a),
                  ::fidl::internal::NaturalClone(storage_.b)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocolpayloads::MainProtocolTwoWayAnonRequest::Storage_
test_protocolpayloads::MainProtocolTwoWayAnonRequest::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a),
                  ::fidl::internal::NaturalClone(storage_.b)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocolpayloads::MainProtocolOneWayAnonRequest::Storage_
test_protocolpayloads::MainProtocolOneWayAnonRequest::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a),
                  ::fidl::internal::NaturalClone(storage_.b)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocolpayloads::MainProtocolOnAnonRequest::Storage_
test_protocolpayloads::MainProtocolOnAnonRequest::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a),
                  ::fidl::internal::NaturalClone(storage_.b)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocolpayloads::LocalStructPayload::Storage_
test_protocolpayloads::LocalStructPayload::CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.a),
                  ::fidl::internal::NaturalClone(storage_.b)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocolpayloads::MainProtocolTwoWayLocalWithErrorTopResponse::Storage_
test_protocolpayloads::MainProtocolTwoWayLocalWithErrorTopResponse::
    CloneStorage_() const {
  return Storage_{::fidl::internal::NaturalClone(storage_.result)};
}
#ifdef __Fuchsia__

#endif  // __Fuchsia__

::test_protocolpayloads::MainProtocolOnLocalWithErrorRequest::Storage_
test_protocolpayloads::MainProtocolOnLocalWithErrorRequest::CloneStorage_()
    const {
  return Storage_{::fidl::internal::NaturalClone(storage_.result)};
}

std::shared_ptr<::test_protocolpayloads::
                    MainProtocol_TwoWayImportWithError_Result::Storage_>
test_protocolpayloads::MainProtocol_TwoWayImportWithError_Result::
    CloneStorage_() const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}

std::shared_ptr<
    ::test_protocolpayloads::MainProtocol_TwoWayAnonWithError_Result::Storage_>
test_protocolpayloads::MainProtocol_TwoWayAnonWithError_Result::CloneStorage_()
    const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}

std::shared_ptr<
    ::test_protocolpayloads::MainProtocol_OnImportWithError_Result::Storage_>
test_protocolpayloads::MainProtocol_OnImportWithError_Result::CloneStorage_()
    const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}

std::shared_ptr<
    ::test_protocolpayloads::MainProtocol_OnAnonWithError_Result::Storage_>
test_protocolpayloads::MainProtocol_OnAnonWithError_Result::CloneStorage_()
    const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}

std::shared_ptr<
    ::test_protocolpayloads::MainProtocol_TwoWayLocalWithError_Result::Storage_>
test_protocolpayloads::MainProtocol_TwoWayLocalWithError_Result::CloneStorage_()
    const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}

std::shared_ptr<
    ::test_protocolpayloads::MainProtocol_OnLocalWithError_Result::Storage_>
test_protocolpayloads::MainProtocol_OnLocalWithError_Result::CloneStorage_()
    const {
  const Storage_& storage = *storage_;
  switch (storage_->index()) {
    case 1:
      return std::make_shared<Storage_>(
          std::in_place_index<1>,
          ::fidl::internal::NaturalClone(std::get<1>(storage)));
    case 2:
      return std::make_shared<Storage_>(
          std::in_place_index<2>,
          ::fidl::internal::NaturalClone(std::get<2>(storage)));
    default:
      return std::make_shared<Storage_>();
  }
}
