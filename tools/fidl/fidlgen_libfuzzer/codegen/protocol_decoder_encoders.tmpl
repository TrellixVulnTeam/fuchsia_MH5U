{{/*
// Copyright 2021 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
*/}}

{{- define "ProtocolDecoderEncoders" -}}

{{- range .Methods -}}

{{- if .HasRequest }}
::fidl::fuzzing::DecoderEncoderForType{
	.fidl_type_name = "{{ .WireTransactionalRequest }}",
	.has_flexible_envelope = {{ .Request.TypeShapeV1.HasFlexibleEnvelope }},
	.decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<{{ .WireTransactionalRequest }}>,
},
{{- end -}}

{{- if .HasResponse }}
{{- if .IsEvent }}
::fidl::fuzzing::DecoderEncoderForType{
	.fidl_type_name = "{{ .WireTransactionalEvent }}",
	.has_flexible_envelope = {{ .Response.TypeShapeV1.HasFlexibleEnvelope }},
	.decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<{{ .WireTransactionalEvent }}>,
},
{{- else }}
::fidl::fuzzing::DecoderEncoderForType{
	.fidl_type_name = "{{ .WireTransactionalResponse }}",
	.has_flexible_envelope = {{ .Response.TypeShapeV1.HasFlexibleEnvelope }},
	.decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<{{ .WireTransactionalResponse }}>,
},
{{- end -}}
{{- end -}}

{{- end -}}

{{- end -}}

