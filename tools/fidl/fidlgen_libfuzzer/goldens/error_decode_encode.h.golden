// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test.error/cpp/wire.h>

// For ::fidl::fuzzing::DecoderEncoderImpl.
#include <lib/fidl/cpp/fuzzing/decoder_encoder.h>

namespace fuzzing {

inline constexpr ::std::array<::fidl::fuzzing::DecoderEncoderForType, 3>
    test_error_decoder_encoders = {
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_error::wire::ExampleFooResponse",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<
                ::test_error::wire::ExampleFooResponse>,
        },

        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::fidl::internal::TransactionalRequest<::test_"
                              "error::Example::Foo>",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<
                ::fidl::internal::TransactionalRequest<
                    ::test_error::Example::Foo>>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::fidl::internal::TransactionalResponse<::test_"
                              "error::Example::Foo>",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<
                ::fidl::internal::TransactionalResponse<
                    ::test_error::Example::Foo>>,
        },
};

}  // namespace fuzzing
