// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test.union/cpp/wire.h>

// For ::fidl::fuzzing::DecoderEncoderImpl.
#include <lib/fidl/cpp/fuzzing/decoder_encoder.h>

namespace fuzzing {

inline constexpr ::std::array<::fidl::fuzzing::DecoderEncoderForType, 10>
    test_union_decoder_encoders = {
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_union::wire::StructWithNullableXUnion",
            .has_flexible_envelope = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<
                ::test_union::wire::StructWithNullableXUnion>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_union::wire::Pizza",
            .has_flexible_envelope = false,
            .decoder_encoder =
                ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::Pizza>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_union::wire::Pasta",
            .has_flexible_envelope = false,
            .decoder_encoder =
                ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::Pasta>,
        },

        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name =
                "::fidl::internal::TransactionalRequest<::test_union::"
                "TestProtocol::StrictXUnionHenceResponseMayBeStackAllocated>",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<
                ::fidl::internal::TransactionalRequest<
                    ::test_union::TestProtocol::
                        StrictXUnionHenceResponseMayBeStackAllocated>>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name =
                "::fidl::internal::TransactionalResponse<::test_union::"
                "TestProtocol::StrictXUnionHenceResponseMayBeStackAllocated>",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<
                ::fidl::internal::TransactionalResponse<
                    ::test_union::TestProtocol::
                        StrictXUnionHenceResponseMayBeStackAllocated>>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name =
                "::fidl::internal::TransactionalRequest<::test_union::"
                "TestProtocol::FlexibleXUnionHenceResponseMustBeHeapAllocated>",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<
                ::fidl::internal::TransactionalRequest<
                    ::test_union::TestProtocol::
                        FlexibleXUnionHenceResponseMustBeHeapAllocated>>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name =
                "::fidl::internal::TransactionalResponse<::test_union::"
                "TestProtocol::FlexibleXUnionHenceResponseMustBeHeapAllocated>",
            .has_flexible_envelope = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<
                ::fidl::internal::TransactionalResponse<
                    ::test_union::TestProtocol::
                        FlexibleXUnionHenceResponseMustBeHeapAllocated>>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_union::wire::NullableUnionStruct",
            .has_flexible_envelope = false,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<
                ::test_union::wire::NullableUnionStruct>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_union::wire::UnionSandwich",
            .has_flexible_envelope = true,
            .decoder_encoder = ::fidl::fuzzing::DecoderEncoderImpl<
                ::test_union::wire::UnionSandwich>,
        },
        ::fidl::fuzzing::DecoderEncoderForType{
            .fidl_type_name = "::test_union::wire::Empty",
            .has_flexible_envelope = false,
            .decoder_encoder =
                ::fidl::fuzzing::DecoderEncoderImpl<::test_union::wire::Empty>,
        },
};

}  // namespace fuzzing
