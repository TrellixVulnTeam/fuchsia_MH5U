// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
library fuchsia.io;

/// Indicates the device is ready for reading.
const DEVICE_SIGNAL_READABLE uint32 = 0x01000000; // ZX_USER_SIGNAL_0
/// Indicates an out-of-band state transition has occurred.
const DEVICE_SIGNAL_OOB uint32 = 0x02000000; // ZX_USER_SIGNAL_1
/// Indicates the device is ready for writing.
const DEVICE_SIGNAL_WRITABLE uint32 = 0x04000000; // ZX_USER_SIGNAL_2
/// Indicates the device has encountered an error state.
const DEVICE_SIGNAL_ERROR uint32 = 0x08000000; // ZX_USER_SIGNAL_3
/// Indicates the device has hung up on the current connection.
const DEVICE_SIGNAL_HANGUP uint32 = 0x10000000; // ZX_USER_SIGNAL_4

// TODO(https://fxbug.dev/62520): remove the "2" suffix.
//
// Background: fidlgen_go generates the same constants for this `bits` as it does for the free-
// standing constants above, which produces non-compiling code. Meanwhile, the constants above are
// aliased in other FIDL libraries:
//
// $ git grep DEVICE_SIGNAL_ -- '*.fidl' ':!*/fuchsia.io/*'
// sdk/fidl/fuchsia.device/controller.fidl:const DEVICE_SIGNAL_READABLE uint32 = fuchsia.io.DEVICE_SIGNAL_READABLE;
// sdk/fidl/fuchsia.device/controller.fidl:const DEVICE_SIGNAL_OOB uint32 = fuchsia.io.DEVICE_SIGNAL_OOB;
// sdk/fidl/fuchsia.device/controller.fidl:const DEVICE_SIGNAL_WRITABLE uint32 = fuchsia.io.DEVICE_SIGNAL_WRITABLE;
// sdk/fidl/fuchsia.device/controller.fidl:const DEVICE_SIGNAL_ERROR uint32 = fuchsia.io.DEVICE_SIGNAL_ERROR;
// sdk/fidl/fuchsia.device/controller.fidl:const DEVICE_SIGNAL_HANGUP uint32 = fuchsia.io.DEVICE_SIGNAL_HANGUP;
// sdk/fidl/fuchsia.hardware.pty/pty.fidl:const SIGNAL_EVENT uint32 = fuchsia.io.DEVICE_SIGNAL_OOB;
//
// Attempting to use this `bits` instead causes fidlgen-rust to produce code
// that doesn't compile because the alias has a different type and the bindings
// aren't automatically inserting coercions.
//
// Hence for now we're stuck with appending "2" to this name.
@deprecated("devices will be services in the future")
type DeviceSignal2 = strict bits : uint32 {
    /// Indicates the device is ready for reading.
    READABLE = 0x01000000; // ZX_USER_SIGNAL_0
    /// Indicates an out-of-band state transition has occurred.
    OOB = 0x02000000; // ZX_USER_SIGNAL_1
    /// Indicates the device is ready for writing.
    WRITABLE = 0x04000000; // ZX_USER_SIGNAL_2
    /// Indicates the device has encountered an error state.
    ERROR = 0x08000000; // ZX_USER_SIGNAL_3
    /// Indicates the device has hung up on the current connection.
    HANGUP = 0x10000000; // ZX_USER_SIGNAL_4
};
