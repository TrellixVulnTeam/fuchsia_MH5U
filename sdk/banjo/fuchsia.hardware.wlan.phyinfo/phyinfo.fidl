// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
library fuchsia.hardware.wlan.phyinfo;

type WlanInfoDriverFeature = strict enum : uint32 {
    /// Device or driver implements scanning.
    SCAN_OFFLOAD = 0x00000001;

    /// Device or driver implements rate selection.
    RATE_SELECTION = 0x00000002;

    /// Device is not a physical device.
    SYNTH = 0x00000004;

    /// Driver supports transmission reports, and will use the
    /// wlan_softmac_ifc.report_tx_status() callback to report the status of each queued
    /// transmission.
    TX_STATUS_REPORT = 0x00000008;

    /// Set this flag to indicate whether SME should trust this device or driver to
    /// handle DFS channels correctly in an active scan (e.g. it makes sure DFS
    /// channel is safe to transmit before doing so).
    DFS = 0x00000010;

    /// Driver responds to probe requests in hardware.
    PROBE_RESP_OFFLOAD = 0x00000020;

    /// Driver supports running the SAE handshake in SME.
    SAE_SME_AUTH = 0x00000040;

    /// Driver implements the SAE handshake.
    SAE_DRIVER_AUTH = 0x00000080;

    /// Driver supports management frame protection and IGTK installation.
    MFP = 0x00000100;

    // Driver implements a separate data plane and will not respond to or implement the Ethernet
    // fidl protocol functionality in the wlanif protocol (specifically WlanifImpl::DataQueueTx and
    // WlanifImplIfc::DataRecv).
    SEPARATE_DATA_PLANE = 0x00000200;
};
